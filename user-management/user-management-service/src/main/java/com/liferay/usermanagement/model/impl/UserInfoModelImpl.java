/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.usermanagement.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.liferay.usermanagement.model.UserInfo;
import com.liferay.usermanagement.model.UserInfoModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the UserInfo service. Represents a row in the &quot;CRM_UserInfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link UserInfoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UserInfoImpl}.
 * </p>
 *
 * @author phantoan
 * @see UserInfoImpl
 * @see UserInfo
 * @see UserInfoModel
 * @generated
 */
@ProviderType
public class UserInfoModelImpl extends BaseModelImpl<UserInfo>
	implements UserInfoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a user info model instance should use the {@link UserInfo} interface instead.
	 */
	public static final String TABLE_NAME = "CRM_UserInfo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "userCode", Types.VARCHAR },
			{ "userId", Types.BIGINT },
			{ "username", Types.VARCHAR },
			{ "male", Types.BOOLEAN },
			{ "birthday", Types.TIMESTAMP },
			{ "address", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "phone", Types.VARCHAR },
			{ "departmentCode", Types.VARCHAR },
			{ "role", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("userCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("username", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("male", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("birthday", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("address", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("phone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("departmentCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("role", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table CRM_UserInfo (uuid_ VARCHAR(75) null,userCode VARCHAR(75) not null primary key,userId LONG,username VARCHAR(75) null,male BOOLEAN,birthday DATE null,address VARCHAR(75) null,email VARCHAR(75) null,phone VARCHAR(75) null,departmentCode VARCHAR(75) null,role VARCHAR(75) null,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table CRM_UserInfo";
	public static final String ORDER_BY_JPQL = " ORDER BY userInfo.userCode ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CRM_UserInfo.userCode ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.usermanagement.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.liferay.usermanagement.model.UserInfo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.usermanagement.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.liferay.usermanagement.model.UserInfo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.usermanagement.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.liferay.usermanagement.model.UserInfo"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long EMAIL_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long USERCODE_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.usermanagement.service.util.PropsUtil.get(
				"lock.expiration.time.com.liferay.usermanagement.model.UserInfo"));

	public UserInfoModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _userCode;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setUserCode(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _userCode;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return UserInfo.class;
	}

	@Override
	public String getModelClassName() {
		return UserInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("userCode", getUserCode());
		attributes.put("userId", getUserId());
		attributes.put("username", getUsername());
		attributes.put("male", getMale());
		attributes.put("birthday", getBirthday());
		attributes.put("address", getAddress());
		attributes.put("email", getEmail());
		attributes.put("phone", getPhone());
		attributes.put("departmentCode", getDepartmentCode());
		attributes.put("role", getRole());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		String userCode = (String)attributes.get("userCode");

		if (userCode != null) {
			setUserCode(userCode);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String username = (String)attributes.get("username");

		if (username != null) {
			setUsername(username);
		}

		Boolean male = (Boolean)attributes.get("male");

		if (male != null) {
			setMale(male);
		}

		Date birthday = (Date)attributes.get("birthday");

		if (birthday != null) {
			setBirthday(birthday);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String phone = (String)attributes.get("phone");

		if (phone != null) {
			setPhone(phone);
		}

		String departmentCode = (String)attributes.get("departmentCode");

		if (departmentCode != null) {
			setDepartmentCode(departmentCode);
		}

		String role = (String)attributes.get("role");

		if (role != null) {
			setRole(role);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public String getUserCode() {
		if (_userCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _userCode;
		}
	}

	@Override
	public void setUserCode(String userCode) {
		_userCode = userCode;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUsername() {
		if (_username == null) {
			return StringPool.BLANK;
		}
		else {
			return _username;
		}
	}

	@Override
	public void setUsername(String username) {
		_username = username;
	}

	@Override
	public boolean getMale() {
		return _male;
	}

	@Override
	public boolean isMale() {
		return _male;
	}

	@Override
	public void setMale(boolean male) {
		_male = male;
	}

	@Override
	public Date getBirthday() {
		return _birthday;
	}

	@Override
	public void setBirthday(Date birthday) {
		_birthday = birthday;
	}

	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_columnBitmask |= EMAIL_COLUMN_BITMASK;

		if (_originalEmail == null) {
			_originalEmail = _email;
		}

		_email = email;
	}

	public String getOriginalEmail() {
		return GetterUtil.getString(_originalEmail);
	}

	@Override
	public String getPhone() {
		if (_phone == null) {
			return StringPool.BLANK;
		}
		else {
			return _phone;
		}
	}

	@Override
	public void setPhone(String phone) {
		_phone = phone;
	}

	@Override
	public String getDepartmentCode() {
		if (_departmentCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _departmentCode;
		}
	}

	@Override
	public void setDepartmentCode(String departmentCode) {
		_departmentCode = departmentCode;
	}

	@Override
	public String getRole() {
		if (_role == null) {
			return StringPool.BLANK;
		}
		else {
			return _role;
		}
	}

	@Override
	public void setRole(String role) {
		_role = role;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				UserInfo.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public UserInfo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (UserInfo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UserInfoImpl userInfoImpl = new UserInfoImpl();

		userInfoImpl.setUuid(getUuid());
		userInfoImpl.setUserCode(getUserCode());
		userInfoImpl.setUserId(getUserId());
		userInfoImpl.setUsername(getUsername());
		userInfoImpl.setMale(getMale());
		userInfoImpl.setBirthday(getBirthday());
		userInfoImpl.setAddress(getAddress());
		userInfoImpl.setEmail(getEmail());
		userInfoImpl.setPhone(getPhone());
		userInfoImpl.setDepartmentCode(getDepartmentCode());
		userInfoImpl.setRole(getRole());
		userInfoImpl.setGroupId(getGroupId());
		userInfoImpl.setCompanyId(getCompanyId());
		userInfoImpl.setCreateDate(getCreateDate());
		userInfoImpl.setModifiedDate(getModifiedDate());

		userInfoImpl.resetOriginalValues();

		return userInfoImpl;
	}

	@Override
	public int compareTo(UserInfo userInfo) {
		String primaryKey = userInfo.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof UserInfo)) {
			return false;
		}

		UserInfo userInfo = (UserInfo)obj;

		String primaryKey = userInfo.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		UserInfoModelImpl userInfoModelImpl = this;

		userInfoModelImpl._originalUuid = userInfoModelImpl._uuid;

		userInfoModelImpl._originalEmail = userInfoModelImpl._email;

		userInfoModelImpl._originalGroupId = userInfoModelImpl._groupId;

		userInfoModelImpl._setOriginalGroupId = false;

		userInfoModelImpl._originalCompanyId = userInfoModelImpl._companyId;

		userInfoModelImpl._setOriginalCompanyId = false;

		userInfoModelImpl._setModifiedDate = false;

		userInfoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<UserInfo> toCacheModel() {
		UserInfoCacheModel userInfoCacheModel = new UserInfoCacheModel();

		userInfoCacheModel.uuid = getUuid();

		String uuid = userInfoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			userInfoCacheModel.uuid = null;
		}

		userInfoCacheModel.userCode = getUserCode();

		String userCode = userInfoCacheModel.userCode;

		if ((userCode != null) && (userCode.length() == 0)) {
			userInfoCacheModel.userCode = null;
		}

		userInfoCacheModel.userId = getUserId();

		userInfoCacheModel.username = getUsername();

		String username = userInfoCacheModel.username;

		if ((username != null) && (username.length() == 0)) {
			userInfoCacheModel.username = null;
		}

		userInfoCacheModel.male = getMale();

		Date birthday = getBirthday();

		if (birthday != null) {
			userInfoCacheModel.birthday = birthday.getTime();
		}
		else {
			userInfoCacheModel.birthday = Long.MIN_VALUE;
		}

		userInfoCacheModel.address = getAddress();

		String address = userInfoCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			userInfoCacheModel.address = null;
		}

		userInfoCacheModel.email = getEmail();

		String email = userInfoCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			userInfoCacheModel.email = null;
		}

		userInfoCacheModel.phone = getPhone();

		String phone = userInfoCacheModel.phone;

		if ((phone != null) && (phone.length() == 0)) {
			userInfoCacheModel.phone = null;
		}

		userInfoCacheModel.departmentCode = getDepartmentCode();

		String departmentCode = userInfoCacheModel.departmentCode;

		if ((departmentCode != null) && (departmentCode.length() == 0)) {
			userInfoCacheModel.departmentCode = null;
		}

		userInfoCacheModel.role = getRole();

		String role = userInfoCacheModel.role;

		if ((role != null) && (role.length() == 0)) {
			userInfoCacheModel.role = null;
		}

		userInfoCacheModel.groupId = getGroupId();

		userInfoCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			userInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			userInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			userInfoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			userInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return userInfoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", userCode=");
		sb.append(getUserCode());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", username=");
		sb.append(getUsername());
		sb.append(", male=");
		sb.append(getMale());
		sb.append(", birthday=");
		sb.append(getBirthday());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", phone=");
		sb.append(getPhone());
		sb.append(", departmentCode=");
		sb.append(getDepartmentCode());
		sb.append(", role=");
		sb.append(getRole());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("com.liferay.usermanagement.model.UserInfo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userCode</column-name><column-value><![CDATA[");
		sb.append(getUserCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>username</column-name><column-value><![CDATA[");
		sb.append(getUsername());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>male</column-name><column-value><![CDATA[");
		sb.append(getMale());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birthday</column-name><column-value><![CDATA[");
		sb.append(getBirthday());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phone</column-name><column-value><![CDATA[");
		sb.append(getPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>departmentCode</column-name><column-value><![CDATA[");
		sb.append(getDepartmentCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>role</column-name><column-value><![CDATA[");
		sb.append(getRole());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = UserInfo.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			UserInfo.class
		};
	private String _uuid;
	private String _originalUuid;
	private String _userCode;
	private long _userId;
	private String _username;
	private boolean _male;
	private Date _birthday;
	private String _address;
	private String _email;
	private String _originalEmail;
	private String _phone;
	private String _departmentCode;
	private String _role;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _columnBitmask;
	private UserInfo _escapedModel;
}